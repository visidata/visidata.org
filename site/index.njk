---
layout: default
meta_description: Command-line interactive multitool for tabular data.
body_class: home
title: "Open-source data multitool"
---
<main id="main" class="flex flex-1 flex-col focus:outline-none" tabindex="-1">
    <section id="container-wide" class="md:py-10 px-4 grid grid-cols-1 md:grid-cols-2 gap-10 place-items-center" aria-label="Hero">
        <div class="p-4">
            <h1 class="md:text-5xl">Data exploration at your fingertips.</h1>
            <p>VisiData is an interactive multitool for tabular data. It combines the clarity of a spreadsheet, the efficiency of the terminal, and the power of Python, into a lightweight utility which can handle millions of rows with ease.</p>
            {% include 'components/ctabutton.njk' %}
            <a href="https://jsvine.github.io/intro-to-visidata/index.html" class="button button-outline ml-5">Tutorial</a>
        </div>
        <div class="rounded-2xl bg-gray-100 dark:bg-gray-700 p-4">
            {% image "images/basic-screenshot.png", "Screenshot of table in VisiData" %}
        </div>
    </section>
    <section id="container-wide" class="py-10 flex flex-col md:flex-row gap-4" aria-label="Command Demo">
        <div class="rounded-2xl bg-gray-100 dark:bg-gray-700 p-4">
            <noscript>
                <p class="font-bold text-center">This demo requires JavaScript to be enabled.</p>
            </noscript>
            <div class="flex flex-col lg:flex-row flex-wrap gap-2">
                <p class="my-4 inline-block">When you have</p>
                <select class="my-1 rounded bg-white dark:bg-gray-900 border-0" id="infmt" aria-label="Select source file">
                    <option value="input.csv" selected="selected">comma-separated values (CSV)</option>
                    <option value="https://en.wikipedia.org/wiki/List_of_largest_cities">wikipedia table</option>
                    <option value="input.log">structured log file</option>
                    <option value="input.tsv">tab-separated values (TSV)</option>
                    <option value="input.txt -f fixed">fixed width text</option>
                    <option value="input.xls">Excel 97 file (.xls)</option>
                    <option value="input.xlsx">Excel 2013 file (.xlsx)</option>
                    <option value="input.json">JSON</option>
                    <option value="input.jsonl">newline-delimited JSON</option>
                    <option value="input.html">HTML</option>
                    <option value="input.yml">YAML</option>
                    <option value="input.h5">HDF5</option>
                    <option value="input.npy">NumPy (.npy/.npz)</option>
                    <option value="visidata.vd.view_pandas(df)">Pandas DataFrame</option>
                    <option value="input.xpt">SAS (.xpt/sas7bdat)</option>
                    <option value="input.sav">SPSS (.sav)</option>
                    <option value="input.dta">Stata (.dta)</option>
                    <option value="input.shp">Shapefile (.shp)</option>
                    <option value="input.pcap">packet capture (.pcap)</option>
                    <option value="input.db">Sqlite database (.db)</option>
                    <option value="input.zip">.zip archive</option>
                    <option value="vgit">git repository</option>
                    <option value="">any kind of tabular data</option>
                </select>
                <p class="my-4 inline-block">but you need</p>
                <select class="my-1 rounded bg-white dark:bg-gray-900 border-0" id="outfmt" aria-label="Select operation">
                    <option value="" selected="selected">a delightful terminal interface</option>
                    <option value="">to explore the data quickly</option>
                    <option value=" # 'Shift+F' on any column">to get some quick insights</option>
                    <option value=" # '=' to add a Python column">to compute Python for each row</option>
                    <option value="-b -o output.tsv">tab-separated values (TSV)</option>
                    <option value="-b -o output.csv">comma-separated values (CSV)</option>
                    <option value="-b -o output.txt --save-filetype=fixed">fixed width text</option>
                    <option value=" 'e' to edit">to clean up the data</option>
                    <option value="-b -o output.txt">plain text</option>
                    <option value="-b -o output.json">JSON</option>
                    <option value="-b -o output.jsonl">JSON (newline-delimited)</option>
                    <option value="-b -o output.geojson">GeoJSON</option>
                    <option value="-b -o output.html">HTML &lt;table&gt;</option>
                    <option value="-b -o output.sqlite">Sqlite database</option>
                    <option value="-b -o output.md">Markdown</option>
                    <option value="-b -o output.jira">Markdown (org-mode) </option>
                    <option value="-b -o output.npy">Numpy (.npy) file</option>
                </select>
            </div>
            <p id="cmdouter" class="mt-5 block w-full p-4 text-xl rounded-2xl bg-brand-dark text-white">
                <span class="select-none font-mono">$</span>
                <code id="cmdline" class="bg-transparent dark:text-gray-100">vd -b input.csv</code>
            </p>
            <script type="text/javascript">
            function display() {
                var infmt = document.getElementById("infmt").value;
                var outfmt = document.getElementById("outfmt").value;
                document.getElementById("cmdline").innerHTML = "vd " + infmt + " " + outfmt;

            }

            var infmt = document.getElementById("infmt");
            var outfmt = document.getElementById("outfmt");

            infmt.addEventListener('change', display);
            outfmt.addEventListener('change', display);
            display();
            </script>
        </div>
    </section>
    <section id="container">
        <div class="flex flex-col md:flex-row items-center gap-x-5">
            <h2>Support us on Patreon</h2>
            <a class="button patreon" href="https://www.patreon.com/bePatron?u=13873753" target="_blank" rel="noopener">Become a Patron →</a>
        </div>
    </section>
    <section id="container-wide" class="py-10 px-4" aria-label="Screenshots and features">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <div class="p-4 rounded-2xl bg-gray-100 dark:bg-gray-700 flex flex-col">
                <div class="flex-grow">
                    <h2><a href="/formats">Any data format</a></h2>
                    <p>Open 1m+ rows in the blink of an eye.</p>
                </div>
                <div class="flex-grow-0 place-self-end">
                    {% image "images/basic-screenshot.png", "Screenshot of VisiData viewing sample data from the JSVine Tutorial." %}
                </div>
            </div>
            <div class="p-4 rounded-2xl bg-gray-100 dark:bg-gray-700">
                <div class="flex-grow">
                    <h2><a href="https://twitter.com/saulfp/status/1524930893181095936">Instant histogram with one keystroke</a></h2>
                </div>
                <div class="flex-grow-0 place-self-end">
                    <video controls alt="Animated image showing VisiData histogram in action.">
                        <source src="videos/freq-move-row.mp4" type="video/mp4">
                    </video>
                </div>
            </div>
            <div class="p-4 rounded-2xl bg-gray-100 dark:bg-gray-700">
                <div class="flex-grow">
                    <h2><a href="/docs/graph/">Scatterplots in the terminal</a></h2>
                </div>
                <div class="flex-grow-0 place-self-end">
                    {% image "images/map-colours.png", "Screenshot of VisiData rendering a geographic map." %}
                </div>
            </div>
            <div class="p-4 rounded-2xl bg-gray-100 dark:bg-gray-700">
                <div class="flex-grow">
                    <h2><a href="/docs/save-restore/">Save sessions for replay later</a></h2>
                    <p>Adhoc data pipelines in batch mode.</p>
                </div>
                <div class="flex-grow-0 place-self-end">
                    {% image "images/scatterplot-usage.png", "Screenshot of VisiData displaying a scatterplot." %}
                </div>
            </div>
            <div class="p-4 rounded-2xl bg-gradient-to-br from-brand-primary via-blue-400 to-blue-500 text-white font-bold gap-2 md:col-span-2 grid-cols-1 md:grid-cols-2 grid items-center md:justify-items-center">
                <h2 class="md:text-5xl md:pl-5">Get started with VisiData</h2>
                <div class="flex flex-col items-start gap-2">
                    <a href="/install/">Install →</a>
                    <a href="/docs/man/">Quick Reference Guide →</a>
                    <a href="/docs/">Documentation →</a>
                    <a href="https://www.youtube.com/playlist?list=PLxu7QdBkC7drrAGfYzatPGVHIpv4Et46W" target="_blank" rel="noopener">Video Case Studies →</a>
                    <a href="https://www.youtube.com/watch?v=N1CBDTgGtOU" target="_blank" rel="noopener">Lightning Demo →</a>
                    <a href="/blog/2020/ten">10 Ways to Use VisiData →</a>
                </div>
            </div>
        </div>
    </section>
    <section id="container-wide" class="py-10 px-4" aria-label="Testimonials">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-5 md:gap-20">
            {% for item in testimonials.main %}
            <div class="p-4 rounded-2xl border-2 border-solid">
                <q class="text-xl">
                    {{ item.quote }}
                </q>
                <p class="text-right mt-2 mb-0">-<a href="{{ item.url }}" target="_blank" rel="noopener">{{ item.author }}</a></p>
            </div>
            {% endfor %}
        </div>
    </section>
    <section id="container-wide" class="py-10 px-4" aria-label="Releases and blog posts">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div class="p-4 rounded-2xl bg-gray-100 dark:bg-gray-700 flex flex-col">
                <div class="flex-grow">
                    <h2 class="mb-0">Releases</h2>
                    {% for releases in collections.releases | limit(4) %}
                    <div>
                        <h2 class="text-2xl inline-block"><a class="border-b-2 border-brand-primary inline-block" href="{{ releases.url }}">{{ releases.data.title }}</a>
                        </h2>
                        <span class="ml-3"><time datetime="{{ blog.date }}">
                                {{ releases.date | dateDisplay }}
                            </time></span>
                    </div>
                    {% endfor %}
                </div>
                <div class="flex-shrink text-right text-xl font-brand"><a class="border-brand-primary" href="/releases/">Older Releases →</a></div>
            </div>
            <div class="p-4 rounded-2xl bg-gray-100 dark:bg-gray-700 flex flex-col">
                <div class="flex-grow">
                    <h2>Blog</h2>
                    {% for blog in collections.blog | limit(3) %}
                    <h2 class="text-2xl">
                        <a class="inline-block no-underline border-b-2 border-brand-primary" href="{{ blog.url }}">{{ blog.data.title }}</a>
                    </h2>
                    <div class="text-sm md:flex mb-4">
                        <time datetime="{{ blog.date }}">
                            {{ blog.date | dateDisplay }}
                        </time>
                    </div>
                    {% endfor %}
                </div>
                <div class="flex-shrink text-right text-xl font-brand"><a class="border-brand-primary" href="/blog/">Older Posts →</a></div>
            </div>
        </div>
    </section>
</main>
